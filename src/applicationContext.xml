<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!--读取配置文件-->
	<util:properties id="db" location="classpath:db.properties"/>
	<!-- 配置数据库连接池（数据源） -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{db.driver}"/>
		<property name="url" value="#{db.url}"/>
		<property name="username" value="#{db.user}"/>
		<property name="password" value="#{db.password}"/>
		<property name="initialSize" value="#{db.initialSize}"/>
		<property name="maxActive" value="#{db.maxSize}"/>
	</bean>	
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		 <!-- 指定扫描哪些路径下的配置文件 -->
		<property name="mapperLocations" value="classpath:com/gsau/entity/*.xml"/>
	</bean>
    <!-- 配置MyBatis注解 -->
    <!-- 在Spring容器初始化时，Spring会自动创建MapperScannerConfigurer，然后自动调用
    	它扫描指定包下，带有指定注解的接口，然后自动实现这个接口，在实现类中它主要封装了
    	创建连接、关闭练级、开启事务、关闭事务的代码，这样在开发时就可以简化了。
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 指定MapperScannerConfigurer要扫描的包 -->
       <property name="basePackage" value="com.gsau.dao" />
       <!-- 指定MapperScannerConfigurer要扫描的注解，该注解需要自定义。 -->
       <property name="annotationClass" value="com.gsau.annotation.MyBatisRepository"/>
	   <!-- SqlSessionFactory会自动注入 -->
	</bean>
	 <!--开启IOC注解扫描 -->
	 <context:component-scan base-package="com.gsau"/>
	 <!--开启Spring MVC注解扫描 -->
	 <mvc:annotation-driven/>
	 <!--处理请求转发，配置视图处理器 -->
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- Spring-mvc.xml 添加文加上载支持 如果使用这个组件必须导入fileupload包!
		 ID 必须为 multipartResolver -->
	<bean id="multipartResolver"
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 限制上载文件的大小是 102400 Byte  也就是 100k Byte -->
		<property name="maxUploadSize" value="1024000"/>
		<!-- 将异常推迟到控制器中处理 -->
		<property name="resolveLazily" value="true"/>
	</bean>
	<!-- 注册拦截器 -->
	<mvc:interceptors>
		<!-- 登录检查拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/admin/toLogin.do"/>
			<mvc:exclude-mapping path="/admin/login.do"/>
			<mvc:exclude-mapping path="/article/findAll.do"/><!-- 首页 -->
			<mvc:exclude-mapping path="/article/findArtById.do"/><!-- 内容页 -->
			<mvc:exclude-mapping path="/article/toArticles.do"/><!--列表页 -->
			<mvc:exclude-mapping path="/picture/findAllPic.do"/><!--图片列表页 -->
			<bean class="com.gsau.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>








